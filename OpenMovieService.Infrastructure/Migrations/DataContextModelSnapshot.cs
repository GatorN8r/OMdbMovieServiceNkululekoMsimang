// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OpenMovieService.Infrastructure.Data;

#nullable disable

namespace OpenMovieService.Infrastructure.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("OpenMovieService.Infrastructure.DatabaseEntities.MovieEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Actors")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Awards")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("BoxOffice")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DVD")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Metascore")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Plot")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Poster")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Production")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Rated")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Released")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Response")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Runtime")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("SortNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("SortNumber"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Writer")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("imdbID")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("imdbRating")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("imdbVotes")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Movie");
                });

            modelBuilder.Entity("OpenMovieService.Infrastructure.DatabaseEntities.RatingEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("MovieEntityId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("MovieEntityId1")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("MovieId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("MovieId1")
                        .HasColumnType("char(36)");

                    b.Property<int>("SortNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("SortNumber"));

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("MovieEntityId1");

                    b.HasIndex("MovieId");

                    b.HasIndex("MovieId1");

                    b.ToTable("Rating");
                });

            modelBuilder.Entity("OpenMovieService.Infrastructure.DatabaseEntities.RatingEntity", b =>
                {
                    b.HasOne("OpenMovieService.Infrastructure.DatabaseEntities.MovieEntity", null)
                        .WithMany("Ratings")
                        .HasForeignKey("MovieEntityId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OpenMovieService.Infrastructure.DatabaseEntities.MovieEntity", null)
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OpenMovieService.Infrastructure.DatabaseEntities.MovieEntity", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("OpenMovieService.Infrastructure.DatabaseEntities.MovieEntity", b =>
                {
                    b.Navigation("Ratings");
                });
#pragma warning restore 612, 618
        }
    }
}
